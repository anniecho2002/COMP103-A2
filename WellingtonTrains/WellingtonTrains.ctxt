#BlueJ class context
comment0.target=WellingtonTrains
comment0.text=\n\ WellingtonTrains\n\ A\ program\ to\ answer\ queries\ about\ Wellington\ train\ lines\ and\ timetables\ for\n\ \ the\ train\ services\ on\ those\ train\ lines.\n\n\ See\ the\ assignment\ page\ for\ a\ description\ of\ the\ program\ and\ what\ you\ have\ to\ do.\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\n\ main\ method\:\ \ load\ the\ data\ and\ set\ up\ the\ user\ interface\n
comment10.params=
comment10.target=void\ listAllTrainLines()
comment10.text=\n\ Query\ 3\:\ List\ all\ the\ train\ lines\n
comment11.params=station
comment11.target=void\ listLinesOfStation(java.lang.String)
comment11.text=\n\ Query\ 4\:\ Lists\ all\ the\ train\ lines\ with\ the\ specified\ station\n
comment12.params=line
comment12.target=void\ listStationsOnLine(java.lang.String)
comment12.text=\n\ Query\ 5\:\ Lists\ all\ the\ stations\ along\ one\ given\ line\n
comment13.params=start\ destination
comment13.target=void\ checkConnected(java.lang.String,\ java.lang.String)
comment13.text=\n\ Query\ 6\:\ Checks\ if\ two\ stations\ are\ connected\n
comment14.params=stationName\ startTime
comment14.target=void\ findNextServices(java.lang.String,\ int)
comment14.text=\n\ Query\ 7\:\ Find\ the\ next\ train\ service\ for\ each\ line\ at\ a\ station\ after\ the\ specified\ time\n
comment15.params=stationName\ destination\ startTime
comment15.target=void\ findTrip(java.lang.String,\ java.lang.String,\ int)
comment15.text=\n\ Query\ 8\:\ Find\ a\ trip\ between\ two\ stations\ (on\ the\ same\ line),\ after\ the\ specified\ time.\n\ Find\ the\ train\ line,\ the\ time\ that\ next\ service\ on\ that\ line\ will\ leave\ the\ first\ station,\ \n\ the\ time\ that\ the\ service\ will\ arrive\ at\ the\ destination\ station,\ \n\ and\ the\ number\ of\ fare\ zones\ the\ trip\ goes\ through.\n
comment16.params=x\ y
comment16.target=void\ closestStations(double,\ double)
comment16.text=\n\ Find\ the\ 10\ closest\ stations\ to\ a\ point\ on\ the\ map,\ listing\ the\ names\ and\ distances\ from\ closest\ to\ furthest.\n
comment2.params=
comment2.target=void\ loadData()
comment2.text=\n\ Load\ data\ files\n
comment3.params=
comment3.target=void\ setupGUI()
comment3.text=\n\ User\ interface\ has\ buttons\ for\ the\ queries\ and\ text\ fields\ to\ enter\ stations\ and\ train\ line\n\ You\ will\ need\ to\ implement\ the\ methods\ here.\n
comment4.params=action\ x\ y
comment4.target=void\ doMouse(java.lang.String,\ double,\ double)
comment5.params=
comment5.target=void\ loadStationData()
comment5.text=\n\ Loads\ the\ station\ data\ into\ the\ station\ map\n
comment6.params=
comment6.target=void\ loadTrainLineData()
comment6.text=\n\ Loads\ the\ train\ line\ data\ into\ the\ train\ line\ map\n
comment7.params=
comment7.target=void\ loadTrainServicesData()
comment7.text=\n\ Loads\ the\ train\ services\ data\ into\ objects\n
comment8.params=
comment8.target=void\ listAllStations()
comment8.text=\n\ Query\ 1\:\ List\ all\ the\ stations\n
comment9.params=
comment9.target=void\ listStationsByName()
comment9.text=\n\ Query\ 2\:\ List\ all\ the\ stations\ alphabetically\n
numComments=17
